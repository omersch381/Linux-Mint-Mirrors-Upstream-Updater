import urllib.request as request
from shutil import copyfile

from bs4 import BeautifulSoup

from parser import Parser


class ArchParser(Parser):
    """This class handles the Arch mirrors.

    It receives a url, sends a get request (similar to wget), parses the html file into mirrors.
    It also switches the default mirror to the fastest.
    """

    def __init__(self, url, upstream_package_file_path='/etc/pacman.d/mirrorlist'):
        self._url = url
        self._upstream_package_file_path = upstream_package_file_path
        self._raw_mirrors = None

    @property
    def url(self):
        return self._url

    def parse_mirrors(self):
        html_content = request.urlopen(self._url)

        soup = BeautifulSoup(html_content, 'html.parser')

        self._raw_mirrors = str(soup).splitlines()

        return [line.split('/')[2] for line in self._raw_mirrors if '#Server' in line]

    def switch_to_fastest_mirror(self, mirror):
        # Saving a backup of the configuration file
        copyfile(self._upstream_package_file_path, self._upstream_package_file_path + '.bak')

        abstract = """
################################################################################
################# Arch Linux mirrorlist generated by mirror_manager ############
################################################################################
        
"""
        for full_mirror in self._raw_mirrors:
            if mirror in full_mirror:
                mirror = full_mirror[1:] + '\n'

        mirrors_file_content = abstract + mirror
        with open(self._upstream_package_file_path, 'w') as file:
            file.write(mirrors_file_content)
